rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Match any document in the 'users' collection
    match /users/{userId} {
      // Allow reading/listing user documents
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow write operations on the user document itself
      allow write: if request.auth != null && request.auth.uid == userId;

      // Match the 'documents' subcollection within a user's path
      match /documents/{docId} {
        // Allow all operations if the user is authenticated and matches the userId
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // Specific rules for messages subcollection (for chat history)
        match /messages/{messageId} {
          // Allow read if the user is authenticated and matches the userId
          allow read: if request.auth != null && request.auth.uid == userId;
          
          // Allow create if the user is authenticated, matches userId, and message has required fields
          allow create: if request.auth != null && 
                        request.auth.uid == userId && 
                        request.resource.data.keys().hasAll(['role', 'content', 'createdAt']);
          
          // Allow update/delete if user is authenticated and matches userId
          // Generally messages shouldn't be updated/deleted, but we'll allow it for admin purposes
          allow update, delete: if request.auth != null && request.auth.uid == userId;
        }
      }
      
      // Allow access to all other subcollections under a user's document
      match /{allSubcollections=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}